@import '@styles/abstracts/theme';
@import '@styles/abstracts/variable';
@import '@styles/abstracts/mixins';

$themes: (
  light: (
    backgroundTrackColor: $placeholder,
    hoverBackgroundTrackColor: $label,
    focusedTrackColor: $placeholder,
    focusedBorderTrackColor: $line,
  ),
  dark: (
    backgroundTrackColor: $label,
    hoverBackgroundTrackColor: $placeholder,
    focusedTrackColor: $placeholder,
    focusedBorderTrackColor: $body,
  ),
);

.oa-toggle {
  width: max-content;
  &:hover {
    & .oa-toggle__track:not([disabled]) {
      background-color: $label;
    }
    & .oa-toggle__track:not([disabled]) .oa-toggle__circle {
      border-color: $label;
    }
    &.oa-toggle_on .oa-toggle__track:not([disabled]) {
      background: $primary-default;
    }
    &.oa-toggle_on .oa-toggle__track:not([disabled]) .oa-toggle__circle {
      border-color: $primary-default;
    }
  }
}

.oa-toggle__track {
  position: relative;
  width: 64px;
  height: 36px;
  display: flex;
  align-items: center;

  background-color: $placeholder;
  border-radius: 40px;
  border: none;
  outline: none;
  cursor: pointer;

  transition: opacity, background 0.3s;
  &:focus {
    background-color: $placeholder;
    @include hoverBorder($line, 40px, 1.3, 1.4);
  }
  &::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;

    border-radius: 40px;
    background: $accent-gradient;
    opacity: 0;
  }
}

.oa-toggle__circle {
  position: relative;
  height: 36px;
  width: 36px;
  left: -5px;

  background: $off-white;
  border-radius: 40px;
  border: 2px solid $placeholder;

  transition: all 0.3s;
}

.oa-toggle {
  @include themify($themes) {
    &__circle {
      border-color: themed('backgroundTrackColor');
    }
    &__track {
      background-color: themed('backgroundTrackColor');
    }
    &__track:focus {
      background-color: themed('focusedTrackColor');
      @include hoverBorder(themed('focusedBorderTrackColor'), 40px, 1.3, 1.4);
      & .oa-toggle__circle {
        border-color: themed('focusedTrackColor');
      }
    }
    &:hover {
      & .oa-toggle__track:not([disabled]) {
        background-color: themed('hoverBackgroundTrackColor');
      }
      & .oa-toggle__track:not([disabled]) .oa-toggle__circle {
        border-color: themed('hoverBackgroundTrackColor');
      }
      &.oa-toggle_on .oa-toggle__track:not([disabled]) {
        background: $primary-default;
      }
      &.oa-toggle_on .oa-toggle__track:not([disabled]) .oa-toggle__circle {
        border-color: $primary-default;
      }
    }
  }
}

.oa-toggle_on .oa-toggle__track::before {
  opacity: 1;
}

.oa-toggle__track:focus .oa-toggle__circle {
  border-color: $placeholder;
}

.oa-toggle_on .oa-toggle__track:focus .oa-toggle__circle,
.oa-toggle_on .oa-toggle__circle {
  left: 21px;

  border: 2px solid transparent;
  background: linear-gradient($off-white, $off-white) padding-box,
    $accent-gradient border-box;
}

.oa-toggle__track:disabled {
  opacity: 0.5;
}
